plugins {
    id 'java-library'
    id "java-test-fixtures"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "io.freefair.lombok" version "5.1.1"


    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}
allprojects {
    apply plugin: "java-library"
    apply plugin: "java-test-fixtures"
    apply plugin: "io.freefair.lombok"
    generateLombokConfig.enabled = false

    apply from: new File(rootProject.rootDir, "/scripts.gradle")

    // Чтобы можно было использовать модули с одинаковыми именами в разных директориях
    // Например :platform:features:command и :donate:types:command
    // В maven с этим проблемы
    group = "ru.spliterash." + getGroupEnd(project)
    version = "1.0.0"

    sourceCompatibility = "11"
    targetCompatibility = "11"

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compileOnly "org.jetbrains:annotations:22.0.0"
        implementation 'commons-io:commons-io:2.11.0'
        implementation 'org.apache.commons:commons-lang3:3.12.0'


        testFixturesImplementation 'commons-io:commons-io:2.11.0'

        testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.1"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.1"
        testImplementation 'org.mockito:mockito-core:4.2.0'
    }

    test {
        useJUnitPlatform()
    }

    dependencies {
        constraints {
            implementation 'org.apache.httpcomponents:httpclient:4.5.13'
        }
    }
}
def domain = project(":domain")
//noinspection GroovyAssignabilityCheck
configure(allprojects - domain) {
    dependencies {
        api domain

        testImplementation(testFixtures(domain))
        testRuntimeOnly(testFixtures(domain))
    }
}

// Настройка главного модуля

//noinspection GroovyAssignabilityCheck
compileSub(project)

dependencies {
    api 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // https://mvnrepository.com/artifact/org.reflections/reflections
    api 'org.reflections:reflections:0.10.2'


}